@model TwenGo.Data.Group

@{
    ViewData["Title"] = "開團";
}

<h2>開團</h2>

<h4>設定時間</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="GroupUp">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="GroupDate" class="control-label"></label>
                <input asp-for="GroupDate" class="form-control" />
                <span asp-validation-for="GroupDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CountDown" class="control-label"></label>
                <input asp-for="CountDown" class="form-control" />
                <span asp-validation-for="CountDown" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductID" class="control-label"></label>
                <input asp-for="ProductID" class="form-control" />
                <span asp-validation-for="ProductID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


<script>
        var vm = new Vue({
            el: "#app",
            data: {
                products: []
            },
            mounted: function () {
                let self = this;
                fetch('https://localhost:44390/api/products')
                    .then(function (res) {
                        return res.json();
                    })
                    .then(function (myjson) {
                        for (let i = 0; i < myjson.length; i++) {
                            self.products.push(myjson[i])
                        }
                    })
            },
        });


</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
